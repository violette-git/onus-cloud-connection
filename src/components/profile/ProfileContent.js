import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Music2, Video } from "lucide-react";
import { useAuth } from "@/contexts/AuthContext";
import { CreateMusicianForm } from "./CreateMusicianForm";
import { SongManager } from "./SongManager";
import { VideoManager } from "./VideoManager";
import { Card, CardContent } from "@/components/ui/card";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Connections } from "@/components/profile/Connections";
import { FeaturedContent } from "./FeaturedContent";
export const ProfileContent = ({ musician, onProfileCreated, profile, isOwner }) => {
    const { user } = useAuth();
    if (!musician && user && isOwner) {
        return (_jsxs("div", { className: "max-w-xl mx-auto mt-12", children: [_jsxs("div", { className: "text-center mb-8", children: [_jsx("h2", { className: "text-2xl font-semibold mb-2", children: "Create Your Musician Profile" }), _jsx("p", { className: "text-muted-foreground", children: "Set up your musician profile to start sharing your music and connecting with fans" })] }), _jsx(CreateMusicianForm, { userId: user.id, onSuccess: () => onProfileCreated?.() })] }));
    }
    return (_jsxs("div", { className: "mt-12 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8", children: [musician && (_jsx("div", { className: "mb-8", children: _jsx(FeaturedContent, { musicianId: musician.id, isOwner: isOwner, songs: musician.songs || [], videos: musician.videos || [] }) })), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-12 gap-8", children: [_jsx("div", { className: "lg:col-span-8 space-y-6", children: musician && (_jsxs(_Fragment, { children: [_jsx(Card, { children: _jsxs(CardContent, { className: "p-6", children: [_jsxs("div", { className: "flex items-center gap-2 mb-6", children: [_jsx(Music2, { className: "h-5 w-5 text-muted-foreground" }), _jsx("h2", { className: "text-xl font-semibold", children: "My Songs" })] }), _jsx(ScrollArea, { className: "h-[400px]", children: _jsx("div", { className: "pr-4", children: _jsx(SongManager, { musicianId: musician.id, songs: musician.songs || [] }) }) })] }) }), _jsx(Card, { children: _jsxs(CardContent, { className: "p-6", children: [_jsxs("div", { className: "flex items-center gap-2 mb-6", children: [_jsx(Video, { className: "h-5 w-5 text-muted-foreground" }), _jsx("h2", { className: "text-xl font-semibold", children: "My Videos" })] }), _jsx(ScrollArea, { className: "h-[400px]", children: _jsx("div", { className: "pr-4", children: _jsx(VideoManager, { musicianId: musician.id, videos: musician.videos || [] }) }) })] }) })] })) }), _jsxs("div", { className: "lg:col-span-4 space-y-6", children: [_jsx(Card, { children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "font-semibold mb-4", children: "About" }), musician?.bio ? (_jsx("p", { className: "text-muted-foreground", children: musician.bio })) : (_jsx("p", { className: "text-muted-foreground italic", children: "No bio available" })), musician?.musician_genres && musician.musician_genres.length > 0 && (_jsxs(_Fragment, { children: [_jsx("div", { className: "my-4 border-t" }), _jsxs("div", { children: [_jsx("h3", { className: "font-semibold mb-3", children: "Genres" }), _jsx("div", { className: "flex flex-wrap gap-2", children: musician.musician_genres.map((mg, index) => (_jsx("span", { className: "px-3 py-1 bg-secondary rounded-full text-sm", children: mg.genre.name }, index))) })] })] }))] }) }), _jsx(Card, { children: _jsxs(CardContent, { className: "p-6", children: [_jsx("h3", { className: "font-semibold mb-4", children: "My Network" }), _jsx(ScrollArea, { className: "h-[300px]", children: _jsx(Connections, { userId: profile.id }) })] }) })] })] }), musician && (!musician.songs?.length && !musician.videos?.length) && (_jsxs("div", { className: "text-center py-12", children: [_jsxs("div", { className: "flex justify-center space-x-4", children: [_jsx(Music2, { className: "h-12 w-12 text-muted-foreground" }), _jsx(Video, { className: "h-12 w-12 text-muted-foreground" })] }), _jsx("p", { className: "text-muted-foreground mt-4", children: "No content added yet" })] }))] }));
};
